version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      # - echo Build started on `date`
      - echo "Building image with tag: $IMAGE_TAG"
      
  build:
    commands:
      - echo Building the Docker image with BuildKit...
      # Enable BuildKit for better caching and parallel builds
      - export DOCKER_BUILDKIT=1
      # Build with cache from previous builds
      - docker build --cache-from $REPOSITORY_URI:latest --build-arg BUILDKIT_INLINE_CACHE=1 -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      # Show image size for monitoring
      - docker images $REPOSITORY_URI:latest --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}"

  post_build:
    commands:
      # - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG      
      - echo Writing image definitions file...
      - printf '[{"name":"psp-cms-container","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json

cache:
  paths:
    - '/root/.docker/**/*'

artifacts:
  files: imagedefinitions.json